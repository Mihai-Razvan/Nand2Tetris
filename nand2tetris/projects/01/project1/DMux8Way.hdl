// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not (in=sel[0], out=notsel0);
    Not (in=sel[1], out=notsel1);
    Not (in=sel[2], out=notsel2);

    And (a=notsel1, b=notsel0, out=sel-x00);
    And (a=notsel1, b=sel[0], out=sel-x01);
    And (a=sel[1], b=notsel0, out=sel-x10);
    And (a=sel[1], b=sel[0], out=sel-x11);

    And (a=notsel2, b=sel-x00, out=sel-000);
    And (a=notsel2, b=sel-x01, out=sel-001);
    And (a=notsel2, b=sel-x10, out=sel-010);
    And (a=notsel2, b=sel-x11, out=sel-011);
    And (a=sel[2], b=sel-x00, out=sel-100);
    And (a=sel[2], b=sel-x01, out=sel-101);
    And (a=sel[2], b=sel-x10, out=sel-110);
    And (a=sel[2], b=sel-x11, out=sel-111);

    And (a=in, b=sel-000, out=a);
    And (a=in, b=sel-001, out=b);
    And (a=in, b=sel-010, out=c);
    And (a=in, b=sel-011, out=d);
    And (a=in, b=sel-100, out=e);
    And (a=in, b=sel-101, out=f);
    And (a=in, b=sel-110, out=g);
    And (a=in, b=sel-111, out=h);
}