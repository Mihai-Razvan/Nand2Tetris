// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Not   (in=sel[0], out=notsel0);
    Not   (in=sel[1], out=notsel1);
    
    And   (a=notsel1, b=notsel0, out=sel-00);
    And   (a=notsel1, b=sel[0], out=sel-01);
    And   (a=sel[1], b=notsel0, out=sel-10);
    And   (a=sel[1], b=sel[0], out=sel-11);

    And16 (a=a, b[0]=sel-00, b[1]=sel-00, b[2]=sel-00, b[3]=sel-00, b[4]=sel-00, b[5]=sel-00, b[6]=sel-00, b[7]=sel-00, b[8]=sel-00, b[9]=sel-00, b[10]=sel-00, b[11]=sel-00, b[12]=sel-00, b[13]=sel-00, b[14]=sel-00, b[15]=sel-00, out=selected-a);
    And16 (a=b, b[0]=sel-01, b[1]=sel-01, b[2]=sel-01, b[3]=sel-01, b[4]=sel-01, b[5]=sel-01, b[6]=sel-01, b[7]=sel-01, b[8]=sel-01, b[9]=sel-01, b[10]=sel-01, b[11]=sel-01, b[12]=sel-01, b[13]=sel-01, b[14]=sel-01, b[15]=sel-01, out=selected-b);
    And16 (a=c, b[0]=sel-10, b[1]=sel-10, b[2]=sel-10, b[3]=sel-10, b[4]=sel-10, b[5]=sel-10, b[6]=sel-10, b[7]=sel-10, b[8]=sel-10, b[9]=sel-10, b[10]=sel-10, b[11]=sel-10, b[12]=sel-10, b[13]=sel-10, b[14]=sel-10, b[15]=sel-10, out=selected-c);
    And16 (a=d, b[0]=sel-11, b[1]=sel-11, b[2]=sel-11, b[3]=sel-11, b[4]=sel-11, b[5]=sel-11, b[6]=sel-11, b[7]=sel-11, b[8]=sel-11, b[9]=sel-11, b[10]=sel-11, b[11]=sel-11, b[12]=sel-11, b[13]=sel-11, b[14]=sel-11, b[15]=sel-11, out=selected-d);

    Or16  (a=selected-a, b=selected-b, out=aOrb);
    Or16  (a=aOrb, b=selected-c, out=aOrbOrc);
    Or16  (a=aOrbOrc, b=selected-d, out=out);
}