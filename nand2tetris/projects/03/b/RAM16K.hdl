// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    And16     (a[0..13]=address, a[14..15]=true, b[0..13]=address, b[14..15]=true, out[0..11]=addressLow12, out[12..13]=addressHigh2);
    
    DMux4Way  (in=true, sel=addressHigh2, a=selectRAM4Ka, b=selectRAM4Kb, c=selectRAM4Kc, d=selectRAM4Kd);  //ram4K address decoder
    
    And       (a=selectRAM4Ka, b=load, out=loadRAM4Ka);
    And       (a=selectRAM4Kb, b=load, out=loadRAM4Kb);
    And       (a=selectRAM4Kc, b=load, out=loadRAM4Kc);
    And       (a=selectRAM4Kd, b=load, out=loadRAM4Kd);

    RAM4K     (in=in, address=addressLow12, load=loadRAM4Ka, out=outRAM4Ka);
    RAM4K     (in=in, address=addressLow12, load=loadRAM4Kb, out=outRAM4Kb);
    RAM4K     (in=in, address=addressLow12, load=loadRAM4Kc, out=outRAM4Kc);
    RAM4K     (in=in, address=addressLow12, load=loadRAM4Kd, out=outRAM4Kd);

    Mux4Way16 (a=outRAM4Ka, b=outRAM4Kb, c=outRAM4Kc, d=outRAM4Kd, sel=addressHigh2, out=out);
}